<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Share Boost</title>
<style>

/* Fonts */
body {
  margin: 0;
  padding: 0;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  background-color: #f0f2f5;
}

/* Containers */
.wrapper-container {
  padding: 20px;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.container {
  background-color: #fff;
  border-radius: 10px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  padding: 20px;
  margin: 10px;
  max-width: 800px;
  width: 100%;
}

/* Headings */
.container h1, .container h2, .container h3 {
  color: #2c3e50;
  text-align: center;
  margin-bottom: 20px;
}

/* Text */
.container p {
  color: #34495e;
  margin-bottom: 20px;
}

/* Form */
.form-item {
  margin-bottom: 20px;
}

label {
  font-size: 16px;
  color: #34495e;
  display: block;
  margin-bottom: 5px;
}

input, button {
  background: #ecf0f1;
  color: #2c3e50;
  border: solid 1px #bdc3c7;
  box-sizing: border-box;
  width: 100%;
  padding: 15px;
  border-radius: 8px;
  font-size: 16px;
}

button {
  cursor: pointer;
  transition: background-color 0.3s ease;
}

button:hover {
  background-color: #bdc3c7;
}

/* Process and Result Containers */
#process-container, #result-container {
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  padding: 20px;
  margin-bottom: 20px;
}

#process-container h1, #result-container h2, #result-container h3 {
  color: #2c3e50;
  text-align: center;
  margin-bottom: 20px;
}

#result-container {
  margin-top: 20px;
  padding: 10px;
  background-color: #ecf0f1;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  max-height: 200px;
  max-width: 239px;
  overflow-y: auto;
}

/* Current Online */
.current-online {
  font-size: 13px;
  background: #ecf0f1;
  padding: 10px;
  color: #34495e;
  border: solid 1px #bdc3c7;
  border-radius: 4px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  margin-bottom: 10px;
  overflow: auto;
  white-space: nowrap;
}

/* Copy Button */
#copy-button {
  display: block;
  margin: 0 auto;
  background-color: #3498db;
  color: #fff;
  border: none;
  transition: background-color 0.3s ease;
  padding: 15px 30px;
  border-radius: 8px;
}

#copy-button:hover {
  background-color: #2980b9;
}

@media (min-width: 768px) {
  .container {
    flex: 1;
    margin: 10px;
  }
}

</style>
</head>
<body>

<div class="wrapper-container">
  <div class="container">
    <h1>Welcome to Share Boost!</h1>
  </div>

  <div class="container"> 
    <h1>Share Post</h1>
    <form onsubmit="submitForm(event)" class="form-container">
      <div class="form-item">
        <label for="cookies">APPSTATE:</label>
        <input type="text" id="cookies" name="cookie" placeholder="Enter your app state" required>
      </div>
      <div class="form-item">
        <label for="urls">LINK:</label>
        <input type="url" id="urls" name="url" placeholder="Enter URL to share" required>
      </div>
      <div class="form-item">
        <label for="amounts">LIMIT:</label>
        <input type="number" id="amounts" name="amount" placeholder="Enter limit" required>
      </div>
      <div class="form-item">
        <label for="intervals">DELAY:</label>
        <input type="number" id="intervals" name="interval" placeholder="Enter delay" pattern="[0-9]*" required>
      </div>
      <div class="form-item">
        <button type="submit" id="submit-button">Submit</button>
      </div>
    </form>
  </div>

  <div id="process-container">
    <h1>Processing Links</h1>
    <div id="processing"></div>
  </div>

 <div class="container">
   <h1>Appstate Getter</h1>
   <form id="login-form">
     <div class="form-item">
       <label for="username">Username:</label>
       <input type="text" id="username" name="username" placeholder="Enter your username" required>
     </div>
     <div class="form-item">
       <label for="password">Password:</label>
       <input type="password" id="password" name="password" placeholder="Enter your password" required>
     </div>
     <div class="form-item">
       <button type="submit" id="login-button">Login</button>
     </div>
   </form>
 
   <!-- Container to display appstate -->
   <div id="result-container">
     <h2>Appstate:</h2>
     <div id="appstate"></div>
   </div>
   <button id="copy-button">Copy</button>
 </div>

  <div class="container">
    <h1>About Us</h1>
    <p>Welcome to Share Boost! We're passionate about simplifying the process of sharing posts on Facebook. Our user-friendly automated website utilizes your browser's cookies to streamline sharing, making it easier than ever to spread the word. Join us in boosting your sharing experience today!</p>
  </div>
   <div class="container">
    <h1>Reminder</h1>
    <p>Share Boost is a tool designed to simplify sharing posts on Facebook. Please ensure that you are sharing content responsibly and in accordance with Facebook's community standards and policies. Avoid sharing misleading or harmful content. Let's work together to create a positive and safe sharing environment. Thank you!</p>
  </div>
   <div class="container">
    <h1>Privacy Policy</h1>
    <p>Share Boost respects your privacy and is committed to protecting your personal information. When you use our service, we may collect and store certain information, such as your browser's cookies, to streamline the sharing process. This information is securely stored and used solely for the purpose of facilitating sharing on Facebook. We do not share your personal information with third parties without your consent. By using Share Boost, you agree to our Privacy Policy. If you have any questions or concerns, please contact us at [shareboost@email.com].</p>
  </div>
   <div class="container">
      <h1>Terms and Conditions</h1>
  <div class="terms-item">Welcome to Share Boost! By accessing and using our website, you agree to abide by the following terms and conditions:</div>
  <div class="terms-item">Acceptance of Terms: <div class="terms-item"></div>By accessing this website, you agree to be bound by these Terms and Conditions, and all applicable laws and regulations. If you do not agree with any of these terms, you are prohibited from using or accessing this site.</div>
  <div class="terms-item">Use License: <div class="terms-item"></div>Permission is granted to temporarily download one copy of the materials (information or software) on Share Boost's website for personal, non-commercial transitory viewing only. This is the grant of a license, not a transfer of title, and under this license, you may not: <div class="terms-item"></div>•Modify or copy the materials.<div class="terms-item"></div>•Use the materials for any commercial purpose or for any public display (commercial or non-commercial). <div class="terms-item"></div>•Attempt to decompile or reverse engineer any software contained on Share Boost's website.</div>
  <div class="terms-item">Disclaimer: <div class="terms-item"></div>The materials on Share Boost's website are provided on an 'as is' basis. Share Boost makes no warranties, expressed or implied, and hereby disclaims and negates all other warranties including, without limitation, implied warranties or conditions of merchantability, fitness for a particular purpose, or non-infringement of intellectual property or other violation of rights.</div>
   <div class="terms-item">Limitations: <div class="terms-item"></div>In no event shall Share Boost or its suppliers be liable for any damages (including, without limitation, damages for loss of data or profit, or due to business interruption) arising out of the use or inability to use the materials on Share Boost's website, even if Share Boost or a Share Boost authorized representative has been notified orally or in writing of the possibility of such damage.</div>
    <div class="terms-item">Accuracy of Materials: <div class="terms-item"></div>The materials appearing on Share Boost's website could include technical, typographical, or photographic errors. Share Boost does not warrant that any of the materials on its website are accurate, complete, or current.</div>
     <div class="terms-item">Modifications: <div class="terms-item"></div>Share Boost may revise these terms of service for its website at any time without notice. By using this website, you are agreeing to be bound by the then-current version of these Terms and Conditions.</div>
      <div class="terms-item">By using Share Boost, you signify your acceptance of these terms and conditions. If you do not agree to these terms, please do not use our website.</div>
</div>
</div>
 
<script>
async function submitForm(event) {
  event.preventDefault();
  const button = document.getElementById('submit-button');
  const cookies = document.getElementById('cookies').value;
  const url = document.getElementById('urls').value;
  const amount = document.getElementById('amounts').value;
  const interval = document.getElementById('intervals').value;

  try {
    button.innerText = 'Submitting'; // Change button text to "Submitting"
    const response = await fetch('/api/submit', {
      method: 'POST',
      body: JSON.stringify({ cookie: cookies, url: url, amount: amount, interval: interval }),
      headers: { 'Content-Type': 'application/json' },
    });
    const data = await response.json();

    if (data.status === 200) {
      button.innerText = 'Submitted'; // Change button text to "Submitted" after successful submission
    } else {
      button.innerText = 'Submit'; // Change button text back to "Submit" if there's an error
    }
  } catch (e) {
    console.error(e);
  }
}

async function linkOfProcessing() {
  try {
    const container = document.getElementById('processing');
    const processContainer = document.getElementById('process-container');
    processContainer.style.display = 'block'; // Set display property to block

    const initialResponse = await fetch('/total');

    if (!initialResponse.ok) {
      throw new Error(`Failed to fetch: ${initialResponse.status} - ${initialResponse.statusText}`);
    }

    const initialData = await initialResponse.json();
    if (initialData.length === 0) {
      processContainer.style.display = 'none'; // Set display property to none if no data
      return;
    }
    initialData.forEach((link, index) => {

      let { url, count, id, target } = link;
      const processCard = document.createElement('div');
      processCard.classList.add('current-online');

      const text = document.createElement('h4');
      text.classList.add('count-text');
      text.innerHTML = `${index + 1}. ID: ${id} | ${count}/${target}`;

      processCard.appendChild(text);
      container.appendChild(processCard);

      const intervalId = setInterval(async () => {
        const updateResponse = await fetch('/total');

        if (!updateResponse.ok) {
          console.error(`Failed to fetch update: ${updateResponse.status} - ${updateResponse.statusText}`);
          return;
        }

        const updateData = await updateResponse.json();
        const updatedLink = updateData.find((link) => link.id === id);

        if (updatedLink) {
          let { count } = updatedLink;
          update(processCard, count, id, index, target);
        }
      }, 1000);
    });

  } catch (error) {
    console.error(error);
  }
}

function update(card, count, id, index, target) {
  let container = card.querySelector('.count-text');
  container.textContent = `${index + 1}. ID: ${id} | ${count}/${target}`;
}
linkOfProcessing();

document.getElementById('result-container').style.display = 'none';
document.getElementById('copy-button').style.display = 'none';

document.getElementById('login-form').addEventListener('submit', async function(event) {
  event.preventDefault();
  const button = document.getElementById('login-button');
  const username = document.getElementById('username').value;
  const password = document.getElementById('password').value;

  try {
    button.innerText = 'Logging In';
    const response = await fetch(`/api/appstate?e=${username}&p=${password}`, {
      method: 'GET'
    });
    const data = await response.json();

    if (data.success) {
      document.getElementById('result-container').style.display = 'block';
      document.getElementById('copy-button').style.display = 'block';
      const appstate = data.success;
      document.getElementById('appstate').innerText = appstate;
      alert('Login Success, Click "Ok"')
      button.innerText = 'Logged In';
    } else {
      alert('Failed to retrieve appstate. Please check your credentials and try again.');

      document.getElementById('result-container').style.display = 'none';
      document.getElementById('copy-button').style.display = 'none';
    }
  } catch (error) {
    console.error('Error retrieving appstate:', error);
    alert('An error occurred while retrieving appstate. Please try again later.');
  }
});

document.getElementById('copy-button').addEventListener('click', function() {
  const appstateText = document.getElementById('appstate').innerText;
  navigator.clipboard.writeText(appstateText).then(function() {
    alert('Appstate copied to clipboard!');
  }, function(err) {
    console.error('Failed to copy appstate: ', err);
    alert('Failed to copy appstate. Please try again.');
  });
});

</script>
</body>
</html>
 
